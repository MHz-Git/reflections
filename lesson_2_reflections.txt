What happens when you initialize a repository? Why do you need to do it?
-Git crates a .git folder to store metadata, now git comamnds can be used un this directory.


How is the staging area different from the working directory and the repository? What value do you think it offers?
-It creates a place between the two, making the step between the working directory and repository eayier.


How can you use the staging area to make sure you have one commit per logical change?
-By adding files to the staging area that represent logical changes.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?
-If you want to make changes that are not related to the main branch, this could be experimental code, an easyier version of a game, or a translation of some text. Branching helps by keeping you main project clean from changes that shouldn't effect it.


How do the diagrams help you visualize the branch structure?
-I can see what is meant by "head" and "branch", and can visualise what a git log would look like of each of these branches.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
-The two branches have their code combined in a way that represents the lines added and removed from both, the branch commits now ahve mulitoule parents.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
-Git's automatic merging is very quick but van only make the right dissison to remove or add code in very obvious cercumstances, manual merges are very slow but you can make informed decisions about changes.


