How did viewing a diff between two versions of a file help you see the bug that was introduced?

-I could narrow down what changes had been made and therefore what lines were likely to include the bug.



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

-It's often difficult to remember what changes you have made to a file, as well as when and why, keeping a history of your changes will help you if you create a bug, forget why you changed something and see your progress over time.



What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

-Automatic saving of commits helps prevent human errors, such as forgetting to save, where as manually commits ensure commits are mad a meaningful points in your code.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

-Each of these version control systems are used in different scenarios and the way they operate needs to fit that scenario, Git is primarily used to version control software projects, software is made up on many separate files that interact with each other, where as Google Docs is primarily used to version control plan language documents, these files are not normally related to each other.


How can you use the commands git log and git diff to view the history of files?

-"git log" while in a git project folder will show you the commits made to that project, if you want to see the difference between two commit ids "git diff" followed by the ids will show you those differences.


How might using version control make you more confident to make changes that could break something?
-If a bug is introduced it is relatively easy to find out how using "git checkout" and "git diff", making it easy to find a bug makes you more confidence when exparementing with code that could casue bugs.

Now that you have your workspace set up, what do you want to try using Git for?
-My projects.
